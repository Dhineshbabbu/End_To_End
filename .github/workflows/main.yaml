name: Build and Deploy Flask App

on:
    push:
        branches:
            - master

jobs:
    build:  
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v2
            
            - name: Log in to Docker Hub (or other registry)
              run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login docker.io -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

            - name: Build Docker image
              run: docker build -t dhinesh160503/gem_price_app:latest .

            - name: Push Docker image
              run: docker push dhinesh160503/gem_price_app:latest

            - name: Run Docker container
              run: docker run -d -p 8080:5000 dhinesh160503/gem_price_app:latest
            
            - name: Check if Docker container is running
              run: |
                CONTAINER_ID=$(docker ps -q --filter ancestor=dhinesh160503/gem_price_app:latest)
                if [ -z "$CONTAINER_ID" ]; then
                  echo "Docker container is not running."
                  exit 1
                else
                  echo "Docker container is running."
                fi
            - name: Get container IP address and port
              run: |
                  CONTAINER_ID=$(docker ps -q --filter ancestor=dhinesh160503/gem_price_app:latest)
                  CONTAINER_IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $CONTAINER_ID)
                  CONTAINER_PORT=$(docker port $CONTAINER_ID 5000 | cut -d':' -f2)
                  APPLICATION_URL="http://$CONTAINER_IP:$CONTAINER_PORT"
                  echo "Application URL: $APPLICATION_URL"
                  echo $APPLICATION_URL > application_url.txt
        
              # Upload URL file as artifact
            - name: Upload URL as artifact
              uses: actions/upload-artifact@v2
              with:
                  name: application_url
                  path: application_url.txt
              
        

